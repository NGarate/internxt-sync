# Bun Configuration for WebDAV Backup

# Dev dependencies
dev = ["typescript", "@types/node"]

# Set default logger level
logLevel = "info"

# Specify Node.js compatibility
[target]
node = "18"

# Build configuration
[build]
format = "esm"
minify = false
sourcemap = "external"

# Typescript configuration
[typescript]
# Use tsconfig.json
enabled = true

# Test configuration
[test]
# Configure preload scripts for tests
preload = ["./test-config/setup.ts"]

# Set test environment variables
env = { NODE_ENV = "test" }

# Configure test timeout
timeout = 10000 # 10 seconds timeout for tests

# Enable pattern matching for test filtering
pattern = "**/*.test.ts"

# Determine whether to use Jest compatibility mode
jest = false

# Add test loader configuration
[test.loader]
extensions = [".ts", ".tsx"]
config = "./test-config/bun-test-loader.ts"

# Configure Bun's native module mocking for tests
[test.mocks]
"chalk" = "./test-config/mocks/chalk-mock.ts"
"webdav" = "./test-config/mocks/webdav-mock.ts"

# Trust settings for script execution
trust = [
  "bun-types",
  "typescript",
  "chalk",
  "webdav"
]

# Install configuration
[install]
# Keep peer dependencies when updating packages
peer = true
# Don't hoist dependencies
flat = false

# Specify which style of lockfile to use
# Using text lockfile instead of binary for better version control compatibility
lockfile = "text"

# Define scopes and registries
[[scopes]]
name = "webdav-backup"
registry = "https://registry.npmjs.org/"

# Run configuration
[run]
# Automatically watch for changes when running scripts
watch = false

# Resolve configuration
[resolve]
# Enable using bare specifiers for local packages
modules = ["node_modules"]

# Use Node-style resolution to be more lenient with file extensions
jsx = "automatic"
extensions = [".tsx", ".ts", ".jsx", ".js", ".json"] 